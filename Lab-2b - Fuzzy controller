import numpy as np
import skfuzzy as fuzz
import skfuzzy.control as ctrl

def fuzzy_controller():
    # Define fuzzy variables
    temperature = ctrl.Antecedent(np.arange(0, 101, 1), 'temperature')
    humidity = ctrl.Antecedent(np.arange(0, 101, 1), 'humidity')
    fan_speed = ctrl.Consequent(np.arange(0, 101, 1), 'fan_speed')

    # Define membership functions
    temperature['cold'] = fuzz.trimf(temperature.universe, [0, 0, 50])
    temperature['warm'] = fuzz.trimf(temperature.universe, [25, 50, 75])
    temperature['hot'] = fuzz.trimf(temperature.universe, [50, 100, 100])

    humidity['dry'] = fuzz.trimf(humidity.universe, [0, 0, 50])
    humidity['normal'] = fuzz.trimf(humidity.universe, [25, 50, 75])
    humidity['humid'] = fuzz.trimf(humidity.universe, [50, 100, 100])

    fan_speed['low'] = fuzz.trimf(fan_speed.universe, [0, 0, 50])
    fan_speed['medium'] = fuzz.trimf(fan_speed.universe, [25, 50, 75])
    fan_speed['high'] = fuzz.trimf(fan_speed.universe, [50, 100, 100])

    # Define rules
    rule1 = ctrl.Rule(temperature['cold'] & humidity['dry'], fan_speed['low'])
    rule2 = ctrl.Rule(temperature['cold'] & humidity['normal'], fan_speed['low'])
    rule3 = ctrl.Rule(temperature['warm'] & humidity['humid'], fan_speed['medium'])
    rule4 = ctrl.Rule(temperature['hot'] & humidity['dry'], fan_speed['medium'])
    rule5 = ctrl.Rule(temperature['hot'] & humidity['humid'], fan_speed['high'])

    # Control system
    fan_control = ctrl.ControlSystem([rule1, rule2, rule3, rule4, rule5])
    fan = ctrl.ControlSystemSimulation(fan_control)

    return fan

# Example usage
fan = fuzzy_controller()
fan.input['temperature'] = 70
fan.input['humidity'] = 60
fan.compute()
print("Fan Speed Output:", fan.output['fan_speed'])
