from multiprocessing import Pool
import numpy as np

def merge(left, right):
    """Merge two sorted lists."""
    result = []
    i = j = 0
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
    result.extend(left[i:])
    result.extend(right[j:])
    return result

def parallel_merge_sort(arr):
    """Parallel Merge Sort implementation using multiprocessing."""
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    with Pool(2) as pool:
        left, right = pool.map(parallel_merge_sort, [arr[:mid], arr[mid:]])
    
    return merge(left, right)

if __name__ == "__main__":
    arr = np.random.randint(0, 100, 20).tolist()
    print("Unsorted Array:", arr)
    sorted_arr = parallel_merge_sort(arr)
    print("Sorted Array:", sorted_arr)
